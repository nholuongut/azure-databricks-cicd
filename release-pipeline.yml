steps:
- task: AzureResourceManagerTemplateDeployment@3
  displayName: 'ARM Template deployment: Resource Group scope'
  inputs:
    azureResourceManagerConnection: 'Developer plan (9ba4c535-94b4-4eff-98cd-02d64b80c335)'
    subscriptionId: '9ba4c535-94b4-4eff-98cd-02d64b80c335'
    resourceGroupName: '$(rg_name)'
    location: '$(location)'
    csmFile: '$(System.DefaultWorkingDirectory)/_demo-cicd/template/dbx.template.json'
    csmParametersFile: '$(System.DefaultWorkingDirectory)/_demo-cicd/template/dbx.parameters.json'
    overrideParameters: '-objectId $(object_id) -keyvaultName $(keyvault) -location $(location) -storageAccountName $(sa_name) -containerName $(container) -workspaceName $(workspace) -workspaceLocation $(location) -tier "premium" -sku "Standard" -tenant $(tenant_id) -networkAcls {"defaultAction":"Allow","bypass":"AzureServices","virtualNetworkRules":[],"ipRules":[]}'

- bash: 'python -m pip install --upgrade pip databricks-cli'
  displayName: 'Install requirments'

- bash: |
   databricks configure --token <<EOF
   https://adb-<workspace-id>.<random-number>.azuredatabricks.net
   $(dbxtoken)
   EOF
  displayName: 'Databricks configure'

- bash: |
   databricks workspace mkdirs /$(folder)
   databricks workspace import --language PYTHON --format SOURCE --overwrite _demo-cicd/notebook/$(notebook-name)-$(Build.SourceVersion).py /$(folder)/$(notebook-name)-$(Build.SourceVersion).py
  displayName: 'Databricks import notebook into workspace'

- bash: |
   # create a new directory
   databricks fs mkdirs dbfs:/dbx-library
   # Import the module
   databricks fs cp $(System.DefaultWorkingDirectory)/_dbx-cicd.git/wheel/friends-0.0.1-py2.py3-none-any.whl dbfs:/dbx-library/  --overwrite
  displayName: 'Import Library into Databricks'

- bash: |
   # Install library
   cluster_id=$(databricks clusters list --output JSON | jq '[ .clusters[] | { name: .cluster_name, id: .cluster_id, state: .state } ]' | jq '.[] | select(.name=="dbx-cluster")' | jq -r '.id')

   echo "Cluster id: $cluster_id"

   databricks libraries install --cluster-id $cluster_id --whl dbfs:/dbx-library/friends-0.0.1-py2.py3-none-any.whl
  displayName: 'Install Library and attach it to the cluster'

